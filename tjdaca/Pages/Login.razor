@layout CustomLayout
@page "/login"
@using System.Security.Claims;
@using Microsoft.AspNetCore.Components.Authorization
@using tjdaca.Services;
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavManager
@inject MudBlazor.ISnackbar snackBar
@attribute [AllowAnonymous]

<section class="h-100">
	<div class="container h-100">
		<div class="row justify-content-sm-center h-100">
			<div class="col-xxl-4 col-xl-5 col-lg-5 col-md-7 col-sm-9">
				<div class="text-center my-5">
					<img src="/img/logo.jpg" alt="logo" width="100">
				</div>
				<div class="card shadow-lg">
					<div class="card-body p-5">
						<h1 class="fs-4 card-title fw-bold mb-4">특자단 학원관리 Login</h1>
						<EditForm class="needs-validation" Model="@_credential" OnSubmit="@Authenticate">
							<div class="mb-3">
								<label class="mb-2 text-muted" for="email">ID</label>
								<InputText class="form-control" id="user-id" placeholder="User ID" @bind-Value=@_credential.UserName required autofocus />
								<div class="invalid-feedback">
									Id is invalid
								</div>
							</div>

							<div class="mb-3">
								<div class="mb-2 w-100">
									<label class="text-muted" for="password">Password</label>
									<a href="forgot.html" class="float-end">
										<!--Forgot Password?-->
									</a>
								</div>
								<InputText type="password" class="form-control" id="password" placeholder="Password" @bind-Value=@_credential.Password required />
								<div class="invalid-feedback">
									Password is required
								</div>
							</div>

							<div class="d-flex align-items-center">
								<div class="form-check">
									<input type="checkbox" name="remember" id="remember" class="form-check-input" disabled>
									<label for="remember" class="form-check-label">Remember Me</label>
								</div>
								<button type="submit" id="login" name="login" class="btn btn-primary ms-auto">Login</button>
							</div>
						</EditForm>
					</div>
				</div>
				<div class="text-center mt-5 text-muted">
					Copyright &copy; 2023 &mdash; 특자단
				</div>
			</div>
		</div>
	</div>
</section>


@code {
	public class Credential { public string UserName { get; set; } = ""; public string Password { get; set; } = ""; }
	private Credential _credential = new Credential();


	private async void Authenticate()
	{
		bool result = await AuthenticationService.Login(_credential.UserName, _credential.Password);

		if (result)
		{
			snackBar.Add("로그인 성공", Severity.Success);

			NavManager.NavigateTo($"/Auth/Login?id={_credential.UserName}&pw={_credential.Password}", true);
		}
		else
		{
			snackBar.Add("접속할 수 없습니다. 계정이 없거나 비밀번호가 잘못되었습니다.", Severity.Warning);
		}
	}
}